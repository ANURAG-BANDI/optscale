""""fixed_power_schedule_columns"

Revision ID: 368673a367ac
Revises: 2aefbdd45077
Create Date: 2024-05-230 13:30:27.299216

"""
import sqlalchemy as sa
import uuid
from alembic import op
from sqlalchemy.orm import Session
from sqlalchemy.sql import table, column
from sqlalchemy import select, String, func


# revision identifiers, used by Alembic.
revision = '368673a367ac'
down_revision = '2aefbdd45077'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        ps_table = table('power_schedule',
                         column('id', String(36)),
                         column('timezone', String(36)))
        cmd = select([ps_table.c.id]).where(
            func.length(ps_table.c.timezone) > 32)
        power_schedules = session.execute(cmd)
        for ps_id, in power_schedules:
            op.execute(
                ps_table.update().where(ps_table.c.id == ps_id).values(
                    timezone='Unknown'
                )
            )
    finally:
        session.close()
    op.alter_column('power_schedule', 'name',
                    existing_type=sa.String(length=36),
                    type_=sa.String(length=256),
                    existing_nullable=False)
    op.alter_column('power_schedule', 'timezone',
                    existing_type=sa.String(length=36),
                    type_=sa.String(length=32),
                    existing_nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = Session(bind=bind)
    try:
        ps_table = table('power_schedule',
                         column('id', String(36)),
                         column('name', String(256)))
        cmd = select([ps_table.c.id]).where(func.length(ps_table.c.name) > 36)
        power_schedules = session.execute(cmd)
        for ps_id, in power_schedules:
            op.execute(
                ps_table.update().where(ps_table.c.id == ps_id).values(
                    name=f'rename_{str(uuid.uuid4())[-12:]}'
                )
            )
    finally:
        session.close()

    op.alter_column('power_schedule', 'name',
                    existing_type=sa.String(length=256),
                    type_=sa.String(length=36),
                    existing_nullable=False)
    op.alter_column('power_schedule', 'timezone',
                    existing_type=sa.String(length=32),
                    type_=sa.String(length=36),
                    existing_nullable=False)
    # ### end Alembic commands ###
